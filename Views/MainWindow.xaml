<Window x:Class="Interweb_Searcher.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Interweb_Searcher.Views"
        xmlns:wpfui="http://schemas.lepo.co/wpfui/2022/xaml"
        mc:Ignorable="d"
        Title="Interweb Searcher" MinWidth="600" MinHeight="400" Height="550" Width="900">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Navigation Buttons and Address Bar -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Navigation Buttons -->
            <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="10">
                <wpfui:Button x:Name="BackButton" Icon="{wpfui:SymbolIcon ArrowLeft48}" FontSize="18" Command="{Binding BackCommand}" Margin="5" />
                <wpfui:Button Icon="{wpfui:SymbolIcon ArrowRight48}" FontSize="18" Command="{Binding ForwardCommand}" Margin="5" />
                <wpfui:Button Icon="{wpfui:SymbolIcon ArrowClockwise48}" FontSize="18" Command="{Binding RefreshCommand}" Margin="5" />
                <wpfui:Button Icon="{wpfui:SymbolIcon Home48}" FontSize="18" Command="{Binding NavigateHomeCommand}" Margin="5" />
            </StackPanel>

            <!-- Address Bar -->
            <TextBox Grid.Column="1" x:Name="UrlBox" Text="{Binding CurrentUrl, UpdateSourceTrigger=PropertyChanged}" 
                     Margin="10" VerticalAlignment="Center" MinHeight="{Binding ActualHeight, ElementName=BackButton}"
                     KeyDown="UrlBox_KeyDown"/>

            <!-- New UI Switch -->
            <wpfui:ToggleSwitch Grid.Column="3" Margin="10" Content="New UI" IsChecked="True" Unchecked="ToggleSwitch_Unchecked"/>
            <wpfui:Button Grid.Column="4" Icon="{wpfui:SymbolIcon Add48}" FontSize="18" Command="{Binding AddTabCommand}" Margin="5" />
        </Grid>

        <!-- TabControl for WebBrowser -->
        <TabControl Grid.Row="1" x:Name="TabControl" Margin="0"
            ItemsSource="{Binding Tabs}"
            SelectedIndex="{Binding SelectedTabIndex}"
            SelectionChanged="TabControl_SelectionChanged">

            <TabControl.Resources>
                <!-- DataTemplate for Normal Tabs -->
                <DataTemplate x:Key="NormalTabTemplate">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="170"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding TabText}" VerticalAlignment="Center"/>
                        <wpfui:Button Grid.Column="1" Icon="{wpfui:SymbolIcon Dismiss48}" Width="35" Command="{Binding DataContext.RemoveTabCommand, RelativeSource={RelativeSource AncestorType=TabControl}}" CommandParameter="{Binding}"/>
                    </Grid>
                </DataTemplate>

                <!-- DataTemplate for Special Tab -->
                <DataTemplate x:Key="SpecialTabTemplate">
                    <Grid>
                        <TextBlock Text="{Binding TabText}" FontSize="18" VerticalAlignment="Center" Padding="10,0"/>
                    </Grid>
                </DataTemplate>
            </TabControl.Resources>

            <!-- Style for TabItems -->
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                    <Style.Triggers>
                        <!-- Apply specific width for special tab -->
                        <DataTrigger Binding="{Binding IsSpecialTab}" Value="True">
                            <Setter Property="Width" Value="30"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TabControl.ItemContainerStyle>


            <!-- Apply the DataTemplate based on the IsSpecialTab property -->
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSpecialTab}" Value="True">
                                        <Setter Property="ContentTemplate" Value="{StaticResource SpecialTabTemplate}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsSpecialTab}" Value="False">
                                        <Setter Property="ContentTemplate" Value="{StaticResource NormalTabTemplate}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
            </TabControl.ItemTemplate>

            <TabControl.ContentTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding Browser}"/>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>

    </Grid>
</Window>
